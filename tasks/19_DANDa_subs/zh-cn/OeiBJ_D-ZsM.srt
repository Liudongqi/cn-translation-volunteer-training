1
00:00:00,140 --> 00:00:02,180
更可能的情况是 我们会从类似这样的文档中

2
00:00:02,180 --> 00:00:05,200
提取出所有作者的数据

3
00:00:05,200 --> 00:00:09,610
我们该怎么做？假定该文档说明了整个   

4
00:00:09,610 --> 00:00:12,660
Biomed Central 架构 编写一个程序 该程序会使用元素树模块  

5
00:00:12,660 --> 00:00:15,870
来从给定的研究论文中提取所有数据  

6
00:00:15,870 --> 00:00:18,780
每位作者的数据应  

7
00:00:18,780 --> 00:00:22,320
储存在 Python 字典中 而所有的字典都应  

8
00:00:22,320 --> 00:00:25,190
存储在一张列表中 我所说的所有作者数据  

9
00:00:25,190 --> 00:00:28,630
指的是 针对作者组中每个作者标签而存储的所有值   

10
00:00:28,630 --> 00:00:32,710
这些值是前页部分的一部分   

11
00:00:32,710 --> 00:00:35,880
这非常类似我们对于  

12
00:00:35,880 --> 00:00:38,940
CSV 文件的处理 即构建 python 字典来描述 

13
00:00:38,940 --> 00:00:42,050
我们所提取的 XML 文件数据 做这个的时候  

14
00:00:42,050 --> 00:00:44,070
需要牢记的一点是 这与我们对于  

15
00:00:44,070 --> 00:00:47,360
CSV 数据的处理类似 即构建 python 字典 

16
00:00:47,360 --> 00:00:51,230
来描述我们要提取的 XML 文件数据   

17
00:00:51,230 --> 00:00:54,400
最后一点是 你可以忽视 

18
00:00:54,400 --> 00:00:57,610
INSR 标签 只需从数据处理中将其略去即可
