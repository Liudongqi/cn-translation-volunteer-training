1
00:00:00,130 --> 00:00:02,500
我们来讲一下表格数据

2
00:00:02,500 --> 00:00:06,530
你可能比较熟悉电子表格应用

3
00:00:06,530 --> 00:00:10,480
比如 微软公司的 Excel 或 Apache OpenOffice 的 Calc

4
00:00:10,480 --> 00:00:13,090
甚至是 Google 的电子表格

5
00:00:13,090 --> 00:00:16,059
借助这些应用

6
00:00:16,059 --> 00:00:18,170
我们可以以电子表格的形式创建表格数据

7
00:00:18,170 --> 00:00:21,060
我非常喜欢披头士乐队

8
00:00:21,060 --> 00:00:25,070
所以我要用他们的唱片数据来讲解数据再加工的过程

9
00:00:25,070 --> 00:00:27,460
我觉得 总有一天

10
00:00:27,460 --> 00:00:30,380
太空牛仔也要听披头士的歌

11
00:00:30,380 --> 00:00:32,800
数据学家往往关心

12
00:00:32,800 --> 00:00:36,910
数据集包含哪些项

13
00:00:36,910 --> 00:00:39,860
以及这些项有哪些字段

14
00:00:39,860 --> 00:00:44,430
你肯定知道 在表格数据中 每行代表一个数据项

15
00:00:44,430 --> 00:00:51,324
每项可以有一个或多个字段 每列代表一个不同的字段

16
00:00:51,324 --> 00:00:57,610
在大多数表格数据中

17
00:00:57,610 --> 00:01:00,010
第一行通常是这些字段的标签

18
00:01:00,010 --> 00:01:04,440
每一个单元格包含某一个字段的值

19
00:01:04,440 --> 00:01:10,700
在这里 这个唱片的发行公司

20
00:01:10,700 --> 00:01:16,340
是加拿大的 Capital Records

21
00:01:16,340 --> 00:01:24,390
现在我们把它抽象化 数据集中的每一行都是一个数据项

22
00:01:24,390 --> 00:01:30,080
每一列是都数据项的字段

23
00:01:30,080 --> 00:01:34,060
每个字段的值都储存在单元格中

24
00:01:34,060 --> 00:01:36,560
在下一个视频中 我们会进行实际操作

25
00:01:36,560 --> 00:01:38,520
用 Python 编程语言

26
00:01:38,520 --> 00:01:41,690
处理 CSV 中的表格数据和 Excel 数据格式
