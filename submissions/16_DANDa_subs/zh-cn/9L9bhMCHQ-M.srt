1
00:00:00,320 --> 00:00:02,550
恭喜你 你已经完成了这节课的这么多内容

2
00:00:02,550 --> 00:00:04,790
我们看一下这个 XORD 练习的答案

3
00:00:04,790 --> 00:00:08,160
这就是解析文件函数

4
00:00:08,160 --> 00:00:10,760
可以看到 我们在这里使用了切片的方法

5
00:00:10,760 --> 00:00:14,990
在表格中使用了 col.values 的方法

6
00:00:14,990 --> 00:00:18,670
来获取第1列的所有值

7
00:00:18,670 --> 00:00:22,250
第1列就是数据集里的 coast 列

8
00:00:22,250 --> 00:00:25,460
然后 我们直接在所得的列表中

9
00:00:25,460 --> 00:00:30,170
利用最大值和最小值函数

10
00:00:30,170 --> 00:00:34,420
获取整个列的最大值和最小值

11
00:00:34,420 --> 00:00:37,340
为找出最大值在 CV 列表中的位置

12
00:00:37,340 --> 00:00:40,935
我们在表格中使用了索引的方法

13
00:00:40,935 --> 00:00:43,779
由于数据始于电子表的第1行

14
00:00:43,779 --> 00:00:47,255
而不是第0行

15
00:00:47,255 --> 00:00:50,760
因此 我们需要在这里加上1

16
00:00:50,760 --> 00:00:53,390
以使我们的值落于电子表内的正确位置

17
00:00:53,390 --> 00:00:55,680
也就是说 获得正确的行数

18
00:00:55,680 --> 00:00:59,330
然后 我们要针对

19
00:00:59,330 --> 00:01:02,730
最大值出现的位置或行 20 

20
00:01:02,730 --> 00:01:07,520
获取第0列的值

21
00:01:07,520 --> 00:01:09,780
这样就能得到最大时间了

22
00:01:09,780 --> 00:01:12,650
然后 我们要将

23
00:01:12,650 --> 00:01:15,830
用浮点数表示的日期

24
00:01:15,830 --> 00:01:20,020
转换为真正的时间元组

25
00:01:20,020 --> 00:01:21,929
对于最小值 我们也进行了同样的处理

26
00:01:23,210 --> 00:01:26,060
在生成该函数最终返回的数据字典时

27
00:01:26,060 --> 00:01:28,700
我们可以直接插入

28
00:01:28,700 --> 00:01:31,530
实际时间、最大值、实际最小时间和最小值

29
00:01:31,530 --> 00:01:34,620
然后 要计算平均值

30
00:01:34,620 --> 00:01:36,820
我们可以直接在这里进行计算

31
00:01:36,820 --> 00:01:41,300
把它当作这个关键字 avgcoast 的值

32
00:01:41,300 --> 00:01:44,040
我们来运行这个代码 我要说明一下

33
00:01:44,040 --> 00:01:47,510
我在这里用的是 pprint 模块 以使打出的数据结构更加美观

34
00:01:50,050 --> 00:01:52,090
可以看到 我们得到的值是正确的

35
00:01:52,090 --> 00:01:53,870
如果你查看电子表本身

36
00:01:53,870 --> 00:01:56,650
并对其进行排序 你会发现

37
00:01:56,650 --> 00:02:01,530
最大时间和最大值的计算结果都是正确的

38
00:02:01,530 --> 00:02:04,980
我需要指出一点 在这里的声明中

39
00:02:04,980 --> 00:02:07,080
我们要进行四舍五入

40
00:02:07,080 --> 00:02:09,970
这样以来 即使小数点后面的数字越来越长

41
00:02:09,970 --> 00:02:11,810
我们的浮点值也不会出现偏差
