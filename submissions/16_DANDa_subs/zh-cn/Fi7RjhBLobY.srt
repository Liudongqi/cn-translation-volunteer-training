1
00:00:00,150 --> 00:00:02,200
我们刚才看到

2
00:00:02,200 --> 00:00:06,450
表格数据可表现的东西比较有限 大多数情况下

3
00:00:06,450 --> 00:00:09,780
有字段值的数据项有时会有子字段

4
00:00:09,780 --> 00:00:12,850
作为编程员 我们有一定的思维模式

5
00:00:12,850 --> 00:00:15,870
有些对象的字段还会涉及其它对象

6
00:00:15,870 --> 00:00:19,130
很多情况下 所有对象都有自己的字段

7
00:00:19,130 --> 00:00:22,460
这里是披头士在维基百科上的唱片页面

8
00:00:22,460 --> 00:00:25,180
我们之前的数据就是由这个生成的

9
00:00:25,180 --> 00:00:27,750
如果我们要在 CSV 文件或 Excel 工作表中

10
00:00:27,750 --> 00:00:30,060
以表格数据的形式重新呈现这个数据

11
00:00:30,060 --> 00:00:32,580
我们就需要进行数据再加工

12
00:00:32,580 --> 00:00:36,610
因为这里有认证机关以及多种认证类型

13
00:00:36,610 --> 00:00:39,780
包括金唱片和白金唱片 等等

14
00:00:39,780 --> 00:00:43,620
这里还有一个复杂的因素

15
00:00:43,620 --> 00:00:47,340
一个唱片可以被认证为多白金

16
00:00:47,340 --> 00:00:50,370
这一个唱片就是多白金 它是四白金唱片

17
00:00:50,370 --> 00:00:53,220
白金的意思是唱片销量达到一百万

18
00:00:53,220 --> 00:00:55,910
四白金唱片是指销量超过四百万

19
00:00:55,910 --> 00:00:59,540
所以 如果我们想用表格数据的形式

20
00:00:59,540 --> 00:01:02,980
表现这个数据集的这一部分

21
00:01:02,980 --> 00:01:05,870
每一个认证机构都需要有两列

22
00:01:05,870 --> 00:01:09,880
一列表示认证水平 一列表示多白金个数

23
00:01:09,880 --> 00:01:13,270
除了生硬和容易出错

24
00:01:13,270 --> 00:01:15,860
用这种方式表现这个数据本来就很奇怪

25
00:01:15,860 --> 00:01:18,660
这就是 JSON 标准出现的原因

26
00:01:18,660 --> 00:01:22,230
它被用于数据建模和系统之间的数据传输

27
00:01:22,230 --> 00:01:25,100
让我们看一下

28
00:01:25,100 --> 00:01:29,090
如何在 JSON 中表现这个数据

29
00:01:29,090 --> 00:01:31,450
我现在只观察 A Hard Day's Night

30
00:01:31,450 --> 00:01:35,640
这个很有趣 因为它有两个不同的唱片公司和发行日期

31
00:01:35,640 --> 00:01:38,300
现在 我们看一下

32
00:01:38,300 --> 00:01:41,230
如何在 JSON 中处理这个问题

33
00:01:41,230 --> 00:01:43,000
我直接将 A Hard Day's Night 的数据

34
00:01:43,000 --> 00:01:47,130
作为 JSON 对象来执行

35
00:01:47,130 --> 00:01:48,690
可以看到 我们有歌名、艺术家和发行三个字段

36
00:01:48,690 --> 00:01:52,460
我们把数据的页面向下拉

37
00:01:52,460 --> 00:01:55,630
可以看到 发行这个字段其实是一个数组

38
00:01:55,630 --> 00:01:58,370
在这里 如果你还记得

39
00:01:58,370 --> 00:02:01,580
这首歌有两个发行的唱片公司

40
00:02:01,580 --> 00:02:06,300
一个是 United Artists 唱片公司 另一个是 Parlophone 唱片公司

41
00:02:06,300 --> 00:02:09,919
这里也是这样的

42
00:02:09,919 --> 00:02:13,120
因为 这些排行榜的位置是指某一次发行的位置

43
00:02:13,120 --> 00:02:15,690
我们需要将它们设为发行数组中

44
00:02:15,690 --> 00:02:19,910
合适的发行对象的一部分

45
00:02:19,910 --> 00:02:23,120
在这里 United Artists 发行的 A Hard Day's Night

46
00:02:23,120 --> 00:02:25,440
其最高榜位在法国是第五

47
00:02:25,440 --> 00:02:28,450
在英国是第一

48
00:02:28,450 --> 00:02:31,420
我们还需要将认证与发行联系在一起

49
00:02:31,420 --> 00:02:34,580
因为不同的发行有不同的认证

50
00:02:34,580 --> 00:02:37,330
所以 这里是不同的认证机构

51
00:02:37,330 --> 00:02:40,430
而美国唱片业协会认证它的多白金个数为四

52
00:02:40,430 --> 00:02:43,550
因为 它是四白金唱片

53
00:02:43,550 --> 00:02:45,920
这是另一次发行的相关数据

54
00:02:45,920 --> 00:02:49,060
这次是 Parlophone 唱片公司

55
00:02:49,060 --> 00:02:52,290
这就是在 JSON 中表现数据的方法

56
00:02:52,290 --> 00:02:57,020
这里要注意 JSON 对象与

57
00:02:57,020 --> 00:03:00,600
Python 及许多其它语言中的字典一样

58
00:03:00,600 --> 00:03:03,590
大多数编程语言都有与 JSON 对象相似的数据类型

59
00:03:03,590 --> 00:03:06,650
在 Python 中 它就是字典

60
00:03:06,650 --> 00:03:09,860
许多其它语言都有类似字典或映射的数据类型

61
00:03:09,860 --> 00:03:13,470
它们与 JSON 十分相似

62
00:03:13,470 --> 00:03:16,210
大多数编程语言也都有数组

63
00:03:16,210 --> 00:03:19,400
在 Python 中 它们叫做列表

64
00:03:19,400 --> 00:03:21,520
我们就只列出这里需要记住的一些 JSON 知识点
