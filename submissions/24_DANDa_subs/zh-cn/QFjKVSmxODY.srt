1
00:00:00,080 --> 00:00:02,090
好 我们已经用 BeautifulSoup 解析了这个 HTML

2
00:00:02,090 --> 00:00:05,190
因此我们可以从中提取 POST 请求中

3
00:00:05,190 --> 00:00:08,260
需要传递的值 那么我们就来谈谈

4
00:00:08,260 --> 00:00:11,840
为什么会存在这些值 与很多网站所做的一样

5
00:00:11,840 --> 00:00:16,530
这一数据源使用这些值来验证

6
00:00:16,530 --> 00:00:19,580
发来的每一条请求 如果你们想知道具体怎么验证

7
00:00:19,580 --> 00:00:22,380
比如说 VIEWSTATE 的用法

8
00:00:22,380 --> 00:00:25,160
我鼓励你去查看 ASP 文档

9
00:00:25,160 --> 00:00:28,240
看看这些类型的服务器如何使用这一特点类型的值

10
00:00:28,240 --> 00:00:32,100
好 这只是为了消除大家的疑惑

11
00:00:32,100 --> 00:00:35,010
我们首先要做的是提交一条初始请求

12
00:00:35,010 --> 00:00:38,150
然后使用得到的响应值 具体来说

13
00:00:38,150 --> 00:00:41,490
就是 VIEWSTATE 和 EVENTVALIDATION 的值

14
00:00:41,490 --> 00:00:45,450
以便提交后续的 POST 请求 那么让我们看一看

15
00:00:45,450 --> 00:00:47,060
这组代码 我要指出的一点是

16
00:00:47,060 --> 00:00:50,260
我上次没有提及的是这里

17
00:00:50,260 --> 00:00:52,860
事实上我们已经硬编码了

18
00:00:52,860 --> 00:00:56,220
 AirportList 和 CarrierList 的值 不过

19
00:00:56,220 --> 00:00:59,030
实际上我们一直在做的是

20
00:00:59,030 --> 00:01:02,320
对这段代码提取的数据中的

21
00:01:02,320 --> 00:01:05,730
 AirportList 和 CarrierList 的所有可能组合循环遍历

22
00:01:05,730 --> 00:01:09,550
好 在这段代码中

23
00:01:09,550 --> 00:01:12,340
我们要发出一条初始 GET 请求 并解析响应的结果以获取

24
00:01:12,340 --> 00:01:15,380
 VIEWSTATE 和 EVENTVALIDATION 的值 然后将这个值传递给后续的 POST 请求

25
00:01:15,380 --> 00:01:20,400
我们来运行！好 我要把这个

26
00:01:20,400 --> 00:01:23,640
写到一个名为 virgin_and_logan_airport.html 的文件

27
00:01:23,640 --> 00:01:26,880
我们来看看这个文件 它在这里

28
00:01:26,880 --> 00:01:29,350
当然 我们会丢失样式信息 因为

29
00:01:29,350 --> 00:01:31,620
相对引用都会失效 我们并没有

30
00:01:31,620 --> 00:01:33,940
下载在该 HTML 文件中引用的

31
00:01:33,940 --> 00:01:37,260
 CSS 或 Javascript 文件

32
00:01:37,260 --> 00:01:40,580
我们没有得到我们想要的数据 而是得到一条语法错误

33
00:01:40,580 --> 00:01:42,250
所以我们需要弄清这里到底发生了什么
