1
00:00:01,060 --> 00:00:03,000
Hi 欢迎加入这个纳米学位项目

2
00:00:03,000 --> 00:00:06,029
我们非常激动见到你 期望能带领你了解

3
00:00:06,030 --> 00:00:08,800
人工智能的前沿领域

4
00:00:08,800 --> 00:00:11,890
现在 你已经是优达学城社区的一员

5
00:00:11,890 --> 00:00:13,990
我们会一路陪伴 确保你实现你的目标

6
00:00:13,990 --> 00:00:15,210
同时 我们也希望从你身上学习

7
00:00:15,210 --> 00:00:17,929
你的学习体验 会影响我们下一步的计划 如果你有任何关于

8
00:00:17,929 --> 00:00:22,429
如何使这门课程更好的想法 请告诉我们 我们非常愿意聆听

9
00:00:22,429 --> 00:00:25,449
现在 让我们在优达学城的办公室逛逛

10
00:00:25,449 --> 00:00:27,089
让你对我们有大体的了解

11
00:00:27,089 --> 00:00:29,129
我们相信实践出真知

12
00:00:29,129 --> 00:00:31,219
所以 你不会只是简单地看看视频

13
00:00:31,219 --> 00:00:34,329
或者做一些关于人工智能的测验 你会自己建立真正的人工智能

14
00:00:34,329 --> 00:00:38,000
并且看着这些人工智能解决一些复杂问题

15
00:00:38,000 --> 00:00:40,350
对这些问题 在速度和准确性上 我们人类远比不上人工智能

16
00:00:40,350 --> 00:00:42,320
— 嘿 可以帮帮我吗？

17
00:00:42,320 --> 00:00:43,960
- 当然可以

18
00:00:43,960 --> 00:00:48,609
看起来你可以用 0.9 替代这里

19
00:00:48,609 --> 00:00:50,570
然后 你可以用 0.8 替代这里

20
00:00:50,570 --> 00:00:53,539
你想要完成剩下的部分吗？

21
00:00:53,539 --> 00:00:54,226
看起来我们解决了

22
00:00:54,226 --> 00:00:56,521
[音乐]

23
00:00:56,521 --> 00:01:00,250
在第一个项目 你会建立一个简单的 AI Agent 来解决任意一个数独问题

24
00:01:00,250 --> 00:01:03,329
并且可以学到两个基本的 AI 技巧

25
00:01:03,329 --> 00:01:05,469
约束传播（Constraint propagation）和搜索

26
00:01:05,469 --> 00:01:08,769
这个项目是一个能让你初步动手解决的小问题

27
00:01:08,769 --> 00:01:12,429
并且展示了你能多快地应用 AI 概念 来解决身边的问题

28
00:01:12,430 --> 00:01:13,370
嘿 Christina

29
00:01:13,370 --> 00:01:14,320
— Hey, Dhruv.

30
00:01:14,319 --> 00:01:15,469
— 正在解决数独问题 你做得很好

31
00:01:16,760 --> 00:01:19,945
你也有机会做得更好

32
00:01:19,944 --> 00:01:21,913
你可以通过使用先进的数独策略来提升你的智能体的速度

33
00:01:21,914 --> 00:01:24,534
[音乐]

34
00:01:24,534 --> 00:01:25,506
在下一个项目

35
00:01:25,507 --> 00:01:29,024
你将会建立一个 AI Agent 来在 Isolation（一种游戏）中打败对手

36
00:01:29,024 --> 00:01:32,064
在这里 你将会应用极大极小值算法（Minimax）和 Alpha-beta 剪枝（Alpha-beta pruning）

37
00:01:32,064 --> 00:01:35,724
这两种策略被用在 Google 的世界一流的围棋人工智能程序 AlphaGo 上

38
00:01:35,724 --> 00:01:38,484
你能创造一个 AI 来引导吃豆人（Pac-Man）穿过迷宫

39
00:01:38,484 --> 00:01:41,674
并且使它能尽可能高效地吃到所有食物

40
00:01:41,674 --> 00:01:44,105
绝对要比 Ryan 的吃豆人更加高效

41
00:01:44,105 --> 00:01:45,730
— 我还在练习..

42
00:01:45,730 --> 00:01:48,082
— 使用简单的技巧 比如广度优先搜索（breadth-first search）

43
00:01:48,081 --> 00:01:51,345
深度优先搜索（depth-first search）和 A* 搜索（A-Star search） 你的 AI Agent 将会

44
00:01:51,346 --> 00:01:53,805
比人类玩家更快地穿过吃豆人的迷宫

45
00:01:53,805 --> 00:01:56,299
接下来你将会有一个任务 就是

46
00:01:56,299 --> 00:01:58,593
找到把货物从一个地点搬到另外一个地点的最优路线

47
00:01:58,593 --> 00:02:02,478
像这样的路径规划问题是物流产业的核心问题

48
00:02:04,379 --> 00:02:08,340
然后 你就会看到 AI 解决这类问题是多么强大

49
00:02:08,340 --> 00:02:11,939
最后 你会使用隐马尔可夫模型（hidden Markov models）来自动识别

50
00:02:11,939 --> 00:02:15,740
手语特征并且转化为英语文本

51
00:02:15,740 --> 00:02:18,920
这只是 AI 对社会的积极影响

52
00:02:18,919 --> 00:02:22,439
的其中一个例子

53
00:02:22,439 --> 00:02:24,889
并且所有这些 都只是第一学期的内容

54
00:02:24,889 --> 00:02:27,559
你会找到许多乐趣 我们等不及看到你开始学习了

