1
00:00:00,080 --> 00:00:02,890
好 我们来深入研究 XML 吧 在我的职业生涯中

2
00:00:02,890 --> 00:00:05,600
我在多个不同的数据科学项目中都使用了 XML 

3
00:00:05,600 --> 00:00:08,340
其中之一是处理大量研究论文 

4
00:00:08,340 --> 00:00:12,500
举个例子  

5
00:00:12,500 --> 00:00:14,880
这是布林和佩奇还在斯坦福大学读研究生时 

6
00:00:14,880 --> 00:00:17,510
写的关于 Google 的论文 我在该项目中所做的

7
00:00:17,510 --> 00:00:21,710
就是所谓的引文分析 在引文分析中

8
00:00:21,710 --> 00:00:25,730
我们要根据论文被多少其它研究论文引用  

9
00:00:25,730 --> 00:00:29,030
来比较这些论文的相对重要性  

10
00:00:29,030 --> 00:00:31,370
例如 你可以将这篇 Google 论文和我的一些著作进行比较  

11
00:00:31,370 --> 00:00:33,750
我的著作被引用的数量非常有限  

12
00:00:33,750 --> 00:00:37,000
相比之下 布林和佩吉的这篇论文被引用了 11000 次

13
00:00:38,040 --> 00:00:39,680
当我在写自己的著作时  

14
00:00:39,680 --> 00:00:43,290
我所用的数据大多都不是可从公共渠道获得的   

15
00:00:43,290 --> 00:00:46,920
不过如今 相同类型的这些数据已经编码为 XML 可以供公众访问了

16
00:00:47,940 --> 00:00:50,820
网上有很多公开获取网站 例如 BioMed Central

17
00:00:51,910 --> 00:00:54,800
这些网站会以印刷格式  

18
00:00:54,800 --> 00:00:58,460
像这样 以及 .xml 格式发布文章 现在

19
00:00:58,460 --> 00:01:01,560
为了进行引文分析这种工作 我们需要    

20
00:01:01,560 --> 00:01:04,670
访问每篇论文的参考书目  

21
00:01:04,670 --> 00:01:07,240
比如 我要研究的一个例子是  

22
00:01:07,240 --> 00:01:10,950
你的数据被编码为 .xml 格式后 会使得  

23
00:01:10,950 --> 00:01:15,110
拉取该类数据并以编程方式来使用它变得有多容易  

24
00:01:15,110 --> 00:01:17,780
我们来看看这篇论文的参考书目  

25
00:01:17,780 --> 00:01:20,220
这些是本研究论文所引用的全部的其它论文  

26
00:01:20,220 --> 00:01:23,260
现在我们来看看这些论文的 XML 版本 

27
00:01:23,260 --> 00:01:27,130
这里是同一篇论文  

28
00:01:27,130 --> 00:01:30,570
它并不是为能方便阅读而设计的    

29
00:01:30,570 --> 00:01:34,360
而是编码为数据 我们来跳到本论文的参考书目部分  

30
00:01:34,360 --> 00:01:37,620
在这里 参考书目的开头 

31
00:01:37,620 --> 00:01:40,350
如果我再看看这篇论文的印刷版本  

32
00:01:40,350 --> 00:01:42,930
可以看到 事实上   

33
00:01:42,930 --> 00:01:47,260
它确实与我们在这看到的一致 所以  

34
00:01:47,260 --> 00:01:50,320
这种使用 XML 的方式非常贴近 XML 设计者的想法  

35
00:01:50,320 --> 00:01:52,940
你有一些文本很多的文档  

36
00:01:52,940 --> 00:01:56,150
而你想要对文本进行编码  

37
00:01:56,150 --> 00:01:58,680
以便至少其有一部分  

38
00:01:58,680 --> 00:02:01,190
可以以编码方式使用 就像我们  

39
00:02:01,190 --> 00:02:04,960
想要对一篇研究论文的参考书目所做的一样 对于

40
00:02:04,960 --> 00:02:08,169
作者列表或文档中类似这样的其它数据 也都可以这么做 
